		public void actionPerformed(ActionEvent e) {

				//V A L I D A T I O N 
				
				if ((humanButton.isSelected()) && (listModel.getSize() == 2)) {
					Toolkit.getDefaultToolkit().beep();
					JOptionPane.showMessageDialog(null, "You can have only 2 players in \"human\" mode!", "Memory",
							JOptionPane.INFORMATION_MESSAGE);
					playerNameTextField.setText("");
					return;
				} if (((soloButton.isSelected()) || (computerButton.isSelected()))
						&& (listModel.getSize()== 1)) {
					System.out.println(listModel.getSize() + "is size");
					Toolkit.getDefaultToolkit().beep();
					JOptionPane.showMessageDialog(null,
							"You can have only 1 player in \"solo\" or  \"computer\" mode!", "Memory",
							JOptionPane.INFORMATION_MESSAGE);
					playerNameTextField.setText("");
					playerNameTextField.requestFocusInWindow();
					return;
				}
//				Toolkit.getDefaultToolkit().beep();
//				JOptionPane.showMessageDialog(null, "You can't register more than 2 players!", "Memory",
//						JOptionPane.INFORMATION_MESSAGE);
//				playerNameTextField.setText("");
//				playerNameTextField.requestFocusInWindow();
//				return;
				
				name = playerNameTextField.getText();
				// User didn't type in a unique name...
				if (listModel.contains(name)) {
					Toolkit.getDefaultToolkit().beep();
					JOptionPane.showMessageDialog(null, "The name already exists,  please choose another name",
							"Memory", JOptionPane.INFORMATION_MESSAGE);
					
					playerNameTextField.requestFocusInWindow();
					playerNameTextField.selectAll();
					return;
				}

				if (!Character.isLetter(playerNameTextField.getText().charAt(0))) {
					Toolkit.getDefaultToolkit().beep();
					JOptionPane.showMessageDialog(null, "Please enter a valid name",
							"Memory", JOptionPane.INFORMATION_MESSAGE);
					playerNameTextField.requestFocusInWindow();
					playerNameTextField.selectAll();

				}else {
					
					int index = list.getSelectedIndex();
					if (index == -1) {
						index = 0;
					} else {
						index++;
					}
					
					listModel.insertElementAt(playerNameTextField.getText(), index);
					list.clearSelection();
					
					playerNameTextField.requestFocusInWindow();
					playerNameTextField.setText("");
					
					list.setSelectedIndex(index);
					list.ensureIndexIsVisible(index);
				}

				
			}